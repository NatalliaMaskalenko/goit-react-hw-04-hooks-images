{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","services/pixabay.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","name","setName","className","e","preventDefault","trim","window","alert","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","ImageGalleryItem","getBigPhoto","photo","alt","photoLage","onClick","src","Button","handleClick","Modal","onClose","children","useEffect","addEventListener","handleKeyDown","code","createPortal","document","getElementById","newPixabayFetchObj","this","base_url","api_key","_name","_page","axios","defaults","baseURL","url","page","console","log","get","then","resalt","data","hits","catch","error","ImageGallery","gallery","setGallery","status","setStatus","showModal","setShowModal","searchPhotos","r","err","toggleModal","localStorage","setItem","JSON","stringify","color","height","width","timeout","length","map","galleryItem","webformatURL","largeImageURL","tags","id","prevGallery","scrollTo","top","documentElement","scrollHeight","behavior","parse","getItem","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e489975f.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleNameChange = e => {\r\n        setName(e.currentTarget.value.toLowerCase())\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (name.trim() === '') {\r\n            window.alert('Введите запрос');\r\n            return;\r\n         }\r\n        onSubmit(name);     \r\n    }   \r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n                <input\r\n                    value={name}\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    name=\"search\"\r\n                    onChange={handleNameChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    )\r\n};\r\n\r\n// export default class Searchbar extends Component{\r\n//     state = {\r\n//         name: '',\r\n//     }\r\n\r\n//     handleNameChange = e => {\r\n//       this.setState({name: e.currentTarget.value.toLowerCase()})\r\n//     }\r\n    \r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n//         if (this.state.name.trim() === '') {\r\n//             window.alert('Введите запрос');\r\n//             return;\r\n//          }\r\n//         this.props.onSubmit(this.state.name);\r\n//         // this.setState({\r\n//         //     name: ''\r\n//         // });\r\n//     }    \r\n       \r\n//     render() {\r\n//         // return (\r\n//         //     <header className=\"Searchbar\">\r\n//         //         <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n//         //             <button type=\"submit\" className=\"SearchForm-button\">\r\n//         //                 <span className=\"SearchForm-button-label\">Search</span>\r\n//         //             </button>\r\n//         //             <input\r\n//         //                 value={this.state.name}\r\n//         //                 className=\"SearchForm-input\"\r\n//         //                 type=\"text\"\r\n//         //                 autoComplete=\"off\"\r\n//         //                 autoFocus\r\n//         //                 placeholder=\"Search images and photos\"\r\n//         //                 name=\"search\"\r\n//         //                 onChange = {this.handleNameChange}\r\n//         //             />\r\n//         //         </form>\r\n//         //     </header>\r\n//         // )\r\n//     }\r\n// }\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ getBigPhoto, photo, alt, photoLage }) {\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img onClick = {()=>getBigPhoto(photoLage, alt)} src={photo} alt={alt} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    photo: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    getBigPhoto: PropTypes.func,\r\n    photoLage: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ handleClick }) {\r\n     return (\r\n        <button className=\"Button\" type=\"button\" onClick={(handleClick)}>Load more</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    handleClick: PropTypes.func,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Modal({onClose, children }) {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.addEventListener('keydown', handleKeyDown);\r\n        }\r\n    }\r\n    );\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose()\r\n        }\r\n    }\r\n\r\n     return createPortal(\r\n            <div className=\"Overlay\" onClick={onClose}>\r\n                <div className=\"Modal\">\r\n                    {/* <img src=\"\" alt=\"\" /> */}\r\n                    {children}\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modalRoot')\r\n        );\r\n};\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func,  \r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport PixabayFetchObj from '../../services/pixabay';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport Modal from '../Modal';\r\n\r\nconst newPixabayFetchObj = new PixabayFetchObj();\r\n\r\nexport default function ImageGallery ({ name }) {\r\n    const [gallery, setGallery] = useState([]);\r\n    const [status, setStatus] = useState('init');\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // if (isFerstRender) {\r\n        //     isFerstRender.current = false;\r\n        //     return;\r\n        // }\r\n\r\n        if (!name) {            \r\n            return;\r\n        }\r\n        \r\n        setStatus('pending');\r\n        newPixabayFetchObj.name = name;\r\n        newPixabayFetchObj.page = 1;\r\n        newPixabayFetchObj.searchPhotos().then(r => {\r\n            setGallery(r);\r\n            setStatus('success');\r\n            if (r === 0) {\r\n                return setStatus('error')\r\n            }\r\n        }).catch(err => {\r\n            setStatus('error')\r\n        });\r\n    }, [name]);\r\n\r\n    const handleClick = () => {\r\n        newPixabayFetchObj.page += 1;\r\n        newPixabayFetchObj.searchPhotos().then(r => {\r\n            setGallery(prevGallery=>[...prevGallery, ...r]);\r\n            setStatus('success');\r\n        }).then(() => window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n        })).catch(err => {\r\n            setStatus('error')\r\n        });\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(!showModal)        \r\n    }\r\n\r\n    const getBigPhoto = (url, alt) => {\r\n        localStorage.setItem('url', JSON.stringify(url));\r\n        localStorage.setItem('alt', JSON.stringify(alt));\r\n        toggleModal();\r\n    }\r\n\r\n    if (status === 'init') {\r\n        return <h1>Hello! Search something....</h1>\r\n    }\r\n    if (status === 'pending') {\r\n        return <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n        />\r\n    }\r\n    if (status === 'success') {\r\n        return (\r\n            <>\r\n                <ul className=\"ImageGallery\">\r\n                    {gallery.length > 0 && gallery.map(galleryItem => (<ImageGalleryItem\r\n                        getBigPhoto={getBigPhoto}\r\n                        key={galleryItem.id}\r\n                        photo={galleryItem.webformatURL}\r\n                        photoLage={galleryItem.largeImageURL}\r\n                        alt={galleryItem.tags}\r\n                    />))}\r\n                </ul>\r\n                <Button className=\"BtnMore\" handleClick={() => { handleClick() }} />\r\n                {showModal && <Modal onClose={toggleModal}>\r\n                    <img src={JSON.parse(localStorage.getItem('url'))} alt={localStorage.getItem('alt')} />\r\n                </Modal>}\r\n            </>\r\n        )\r\n    };   \r\n};\r\n\r\nImageGallery.propTypes = {\r\n    name: PropTypes.string,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default class PixabayFetchObj{\r\n    constructor() {\r\n        this.base_url = `https://pixabay.com/api/`;\r\n        this.api_key = `21301375-7d22153b76338a293f3dc129f`;\r\n        this._name = '';\r\n        this._page = 1;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(value) {\r\n        return this._name = value;\r\n    }\r\n\r\n     get page() {\r\n        return this._page;\r\n    }\r\n    set page(value) {\r\n        return this._page = value;\r\n    }\r\n    // создаем метод\r\n    searchPhotos() {\r\n        axios.defaults.baseURL = this.base_url;\r\n       \r\n        let url = `?key=${this.api_key}&q=${this.name}&page=${this.page}&per_page=12&image_type=photo&orientation=horizontalv`;\r\n        console.log(this.page, this.name);\r\n        return axios\r\n            .get(url)\r\n            .then((resalt) => {\r\n                return resalt.data;\r\n            })\r\n            .then((data) => {\r\n                return data.hits;\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n    }\r\n}","import { useState } from 'react';\r\nimport Searchbar from './Components/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery';\r\n\r\nexport default function App() {\r\n    const [name, setName] = useState('');\r\n\r\n//     const handleFormSubmit = name => {\r\n//     setName(name);\r\n//   };\r\n\r\n     return (\r\n    <>\r\n      <Searchbar onSubmit={setName} />\r\n      <ImageGallery name={name}/>\r\n    </>\r\n        \r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}